# ┏┳┓┏━┓┏┓╻╻╺┳╸┏━┓┏━┓
# ┃┃┃┃ ┃┃┗┫┃ ┃ ┃ ┃┣┳┛
# ╹ ╹┗━┛╹ ╹╹ ╹ ┗━┛╹┗╸

monitor = ,preffered,auto,1
monitor = VGA-1,disable

# ╻  ┏━┓╻ ╻┏┓╻┏━╸╻ ╻
# ┃  ┣━┫┃ ┃┃┗┫┃  ┣━┫
# ┗━╸╹ ╹┗━┛╹ ╹┗━╸╹ ╹

exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd --all
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = /usr/lib/polkit-kde-authentication-agent-1
exec-once = dunst
#exec-once = pulseaudio
exec-once = hypridle
exec-once = ~/.config/hypr/scripts/wallpaperdaemon.sh
exec-once = ~/.config/hypr/scripts/resetxdgportal.sh
exec-once = ~/.config/hypr/scripts/control.sh
#exec-once = ~/.config/hypr/scripts/eww.sh
exec-once = ags
#exec-once = waybar
exec-once = hyprpm reload -n

# ┏━╸┏┓╻╻ ╻
# ┣╸ ┃┗┫┃┏┛
# ┗━╸╹ ╹┗┛

env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
env = QT_QPA_PLATFORM,wayland
env = QT_QPA_PLATFORMTHEME,qt5ct
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = MOZ_ENABLE_WAYLAND,1
env = WLR_NO_HARDWARE_CURSORS,1
nv = WLR_DRM_DEVICES,/dev/dri/card1 # Only use iGPU
# env = WLR_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0 # iGPU as a primary & NVIDIA as a secondary
# env = WLR_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0 # NVIDIA as a primary & iGPU as a secondary

# ╻┏┓╻┏━┓╻ ╻╺┳╸
# ┃┃┗┫┣━┛┃ ┃ ┃
# ╹╹ ╹╹  ┗━┛ ╹

input {
    kb_layout = de
    repeat_rate = 50
    repeat_delay = 300

    follow_mouse = 1
    touchpad {
        natural_scroll = yes
    }

    #sensitivity = -0.3 # -1.0 - 1.0, 0 means no modification.
    accel_profile = flat
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 3
}

# ╻  ┏━┓╻ ╻┏━┓╻ ╻╺┳╸┏━┓
# ┃  ┣━┫┗┳┛┃ ┃┃ ┃ ┃ ┗━┓
# ┗━╸╹ ╹ ╹ ┗━┛┗━┛ ╹ ┗━┛

dwindle {
    pseudotile = no
    preserve_split = yes
    # special_scale_factor = 0.9
}

# ┏┳┓╻┏━┓┏━╸
# ┃┃┃┃┗━┓┃
# ╹ ╹╹┗━┛┗━╸

misc {
    force_default_wallpaper = 0
}

# ┏━┓┏━┓╻ ╻┏━┓┏━╸┏━╸
# ┗━┓┃ ┃┃ ┃┣┳┛┃  ┣╸
# ┗━┛┗━┛┗━┛╹┗╸┗━╸┗━╸

#source = ~/.config/hypr/animations.conf
#source = ~/.config/hypr/keybindings.conf
#source = ~/.config/hypr/rules.conf
#source = ~/.config/hypr/theme.conf

bind = SUPER, K, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable

plugin {
    hyprexpo {
        columns = 3
        gap_size = 10
        bg_col = rgb(111111)
        workspace_method = first 1 # [center/first] [workspace] e.g. first 1 or center m+1
    }
    scroller {
        column_default_width = maximized
        focus_wrap = false
    }
}
plugin:dynamic-cursors {
    # sets the cursor behaviour, supports these values:
    # tilt    - tilt the cursor based on x-velocity
    # rotate  - rotate the cursor based on movement direction
    # stretch - stretch the cursor shape based on direction and velocity
    # none    - do not change the cursors behaviour
    mode = stretch

    # minimum angle difference in degrees after which the shape is changed
    # smaller values are smoother, but more expensive for hw cursors
    threshold = 2

    # override the mode behaviour per shape
    # this is a keyword and can be repeated many times
    # by default, there are no rules added
    # see the dedicated `shape rules` section below!

    # for mode = rotate
    rotate {

        # length in px of the simulated stick used to rotate the cursor
        # most realistic if this is your actual cursor size
        length = 20

        # clockwise offset applied to the angle in degrees
        # this will apply to ALL shapes
        offset = 0.0
    }

    # for mode = tilt
    tilt {

        # controls how powerful the tilt is, the lower, the more power
        # this value controls at which speed (px/s) the full tilt is reached
        limit = 5000

        # relationship between speed and tilt, supports these values:
        # linear             - a linear function is used
        # quadratic          - a quadratic function is used (most realistic to actual air drag)
        # negative_quadratic - negative version of the quadratic one, feels more aggressive
        function = negative_quadratic
    }

    # for mode = stretch
    stretch {

        # controls how much the cursor is stretched
        # this value controls at which speed (px/s) the full stretch is reached
        limit = 2000

        # relationship between speed and stretch amount, supports these values:
        # linear             - a linear function is used
        # quadratic          - a quadratic function is used
        # negative_quadratic - negative version of the quadratic one, feels more aggressive
        function = quadratic
    }

    # configure shake to find
    # magnifies the cursor if its is being shaken
    shake {

        # enables shake to find
        enabled = false

        # use nearest-neighbour (pixelated) scaling when shaking
        # may look weird when effects are enabled
        nearest = true

        # controls how soon a shake is detected
        # lower values mean sooner
        threshold = 6.0

        # magnification level immediately after shake start
        base = 4.0
        # magnification increase per second when continuing to shake
        speed = 4.0
        # how much the speed is influenced by the current shake intensitiy
        influence = 0.0

        # maximal magnification the cursor can reach
        # values below 1 disable the limit (e.g. 0)
        limit = 0.0

        # time in millseconds the cursor will stay magnified after a shake has ended
        timeout = 2000

        # show cursor behaviour `tilt`, `rotate`, etc. while shaking
        effects = false

        # enable ipc events for shake
        # see the `ipc` section below
        ipc = false
    }
}
